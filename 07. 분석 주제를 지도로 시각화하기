#7-1 어느 지역이 제일 비쌀까?

#1단계: 지역별 평균 가격 구하기
setwd(dirname(rstudioapi::getSourceEditorContext()$path))
load("./06_geodataframe/06_apt_price.rdata")
library(sf)
grid <- st_read("./01_code/sigun_grid/seoul.shp") #서울 1Km 그리드 불러오기
apt_price <- st_join(apt_price, grid, join=st_intersects) #st_join()으로 특성이 다른 데이터를 결합 / st_intersects는 데이터가 교차하는지 판별
head(apt_price, 2)

kde_high <- aggregate(apt_price$py, by=list(apt_price$ID), mean) #그리드별 평균 가격 / aggreagate()에서 mean함수를 적용 / by는 반드시 리스트이어야 한다
colnames(kde_high) <- c("ID", "avg_price")
head(kde_high, 2)

#2단계: 평균 가격 정보 표시하기
kde_high <- merge(grid, kde_high, by="ID") #ID기준으로 결합
library(ggplot2)
library(dplyr)
kde_high %>% ggplot(aes(fill = avg_price)) + #그래프 시각화 / geom_sf()는 공간 데이터를 시각화하는 함수
  geom_sf() +
  scale_fill_gradient(low="white", high="red")

#3단계: 지도 경계 그리기
library(sp)
kde_high_sp <- as(st_geometry(kde_high), "Spatial") #sf객체에서 공간 정보를 추출하는 함수 / Spatial은 공간 데이터를 처리하고 분석함
x <- coordinates(kde_high_sp)[,1] #위도 추출
y <- coordinates(kde_high_sp)[,2] #경도 추출

l1 <- bbox(kde_high_sp)[1,1] - (bbox(kde_high_sp)[1,1]*0.0001) #기준 경게 설정
l2 <- bbox(kde_high_sp)[1,2] + (bbox(kde_high_sp)[1,2]*0.0001)
l3 <- bbox(kde_high_sp)[2,1] - (bbox(kde_high_sp)[2,1]*0.0001)
l4 <- bbox(kde_high_sp)[2,2] + (bbox(kde_high_sp)[2,2]*0.0001)

library(spatstat)
win <- owin(xrange=c(l1,l2), yrange=c(l3,l4)) #지도 경계선 생성
plot(win)
rm(list=c("kde_high_sp", "apt_price", "l1", "l2", "l3", "l4")) #객체를 메모리에서 제거

#4단계: 밀도 그래프 표시하기
p <- ppp(x, y, window=win) #ppp()는 위도와 경도를 포인트로 변환
d <- density.ppp(p, weights = kde_high$avg_price, #커널 밀도 함수로 변환
                 sigma = bw.diggle(p), #시그마 옵션
                 kernel = 'gaussian') #커닐 옵션
plot(d) #밀도 그래프 확인
rm(list = c("x", "y", "win", "p"))

#5단계: 래스터 이미지로 변환하기
d[d < quantile(d)[4] + (quantile(d)[4]*0.1)] <- NA #상위 75% 값(Q3) + 10%**보다 작은 값을 NA로 변경
library(raster) #raster()은 커닐 밀도 데이터를 레스터 이미로 변환시킴
raster_high <- raster(d) #래스터 이미지로 변환
plot(raster_high)

#6단계: 불필요한 부분 자르기
bnd <- st_read("./01_code/sigun_bnd/seoul.shp") #서울시 경계선 불러오기
raster_high <- crop(raster_high, extent(bnd)) #외각선 자르기
crs(raster_high) <- sp::CRS("+proj=longlat +datum=WGS84 +no_defs +ellps=WGS84 +towgs84=0,0,0") #좌표계 정의
plot(raster_high) #지도 확인
plot(bnd, col=NA, border="red", add=TRUE)

#7단계: 지도 그리기
library(leaflet)
leaflet() %>%
  addProviderTiles(providers$CartoDB.Positron) %>% #기본 지도 불러오기
  addPolygons(data=bnd, weight=3, color="red", fill=NA) %>% #서울시 경계선 불러오기
  addRasterImage(raster_high, #래스터 이미지 불러오기
                 colors = colorNumeric(c("blue", "green", "yellow", "red"),
                                       values(raster_high), na.color="transparent"), opacity=0.4)

#8단계: 평균 가격 정보 저장하기
dir.create("07_map")
save(raster_high, file="./07_map/07_kde_high.rdata")
rm(list = ls()) #메모리 정리



#7-2 요즘 뜨는 지역은 어디일까?
