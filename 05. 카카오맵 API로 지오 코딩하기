#5-1 지오 코딩 준비하기

#1단계: 카카오 로컬 API키 발급하기
REST_API <- "746249ff2fdc7ec1fc1da2c01af66e1c"

#2단계: 중복된 주소 제거하기
setwd(dirname(rstudioapi::getSourceEditorContext()$path))
getwd()
load("./04_pre_process/04_pre_process.rdata") #실거래 지료 불러오기
apt_juso <- data.frame(apt_price$juso_jibun) #주소가 있는 칼럼 추출
apt_juso <- data.frame(apt_juso[!duplicated(apt_juso), ]) #중복되는 주소를 제거
head(apt_juso)



#5-2 주소를 좌표로 변환하는 지오 코딩

#1단계: 지오 코딩 준비하기
add_list <- list()
cnt <- 0
kakao_key = "746249ff2fdc7ec1fc1da2c01af66e1c"

library(httr)
library(RJSONIO)
library(data.table)
library(dplyr)

for(i in 1:nrow(apt_juso)) { #주소를 좌표료 변환하는 지오 코딩
  tryCatch(
    {
      lon_lat <- GET(url = 'https://dapi.kakao.com/v2/local/search/address.json', #주소로 좌푯값을 요청
                     query = list(query = apt_juso[i,]),
                     add_headers(Authorization = paste0("KakaoAK ", kakao_key)))
      coordxy <- lon_lat %>% content(as = 'text') %>% RJSONIO::fromJSON() #위경도만 추출하여 저장
      
      cnt = cnt + 1
      add_list[[cnt]] <- data.table(apt_juso = apt_juso[i,], #주소, 경도, 위도 정보를 리스트로 저장
                                    coord_x = coordxy$documents[[1]]$x,
                                    coord_y = coordxy$documents[[1]]$y)
      
      message <- paste0("[", i, "/", nrow(apt_juso), "] 번째 (", #메시지 알림
                        round(i/nrow(apt_juso)*100,2)," %) [", apt_juso[i,] , "] 지오코딩 중입니다:
                        X= ", add_list[[cnt]]$coord_x, " / Y=", add_list[[cnt]]$coord_y)
      cat(message, "\n\n")
    }, error = function(e){cat("ERROR :",conditionMessage(e), "\n")}
  )
}

juso_geocoding <- rbindlist(add_list) #rbindlist()는 여러개의 리스트를 데이터프레임으로 변환
juso_geocoding$coord_x <- as.numeric(juso_geocoding$coord_x) #위도를 숫자형으로 변환
juso_geocoding$coord_y <- as.numeric(juso_geocoding$coord_y) #경도를 숫자형으로 변환
juso_geocoding <- na.omit(juso_geocoding) #결측값 제거
dir.create("./05_geocoding")
save(juso_geocoding, file="./05_geocoding/05_juso_geocoding.rdata")
write.csv(juso_geocoding, "./05_geocoding/05_juso_geocoding.csv")
